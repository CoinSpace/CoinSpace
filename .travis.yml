matrix:
  include:
  - os: osx
    osx_image: xcode11.5
    language: node_js
    node_js: '12'
    env: DISTRIBUTION=mac
  - os: osx
    osx_image: xcode11.5
    language: node_js
    node_js: '12'
    env: DISTRIBUTION=mas
  - os: linux
    dist: bionic
    language: node_js
    node_js: '12'
    env: DISTRIBUTION=snap
    addons:
      snaps:
      - name: snapcraft
        confinement: classic

branches:
  only:
  - master
  - develop
  - desktop

install:
  - npm ci
  - (cd electron && npm ci)

before_script:
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    echo $CERTIFICATE_MAC | base64 --decode > certificate.p12;
    security create-keychain -p travis build.keychain;
    security default-keychain -s build.keychain;
    security unlock-keychain -p travis build.keychain;
    security set-keychain-settings build.keychain;
    security list-keychains -d user -s build.keychain;
    security import certificate.p12 -k build.keychain -P $CERTIFICATE_MAC_PASSWORD -T /usr/bin/codesign -T /usr/bin/productbuild 2>&1 >/dev/null;
    security set-key-partition-list -S apple-tool:,apple: -s -k travis build.keychain 2>&1 >/dev/null;
    rm certificate.p12;
    if [[ "$DISTRIBUTION" == "mas" ]]; then
      echo $PROVISIONING_DISTRIBUTION | base64 --decode > electron/embedded.provisionprofile;
    fi
  fi
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    # https://github.com/electron-userland/electron-builder/pull/5001
    sed -i'.backup' -e 's/await this.helper.writeDesktopEntry(this.options, packager.executableName, desktopFile, {/await this.helper.writeDesktopEntry(this.options, packager.executableName + " %U", desktopFile, {/g' electron/node_modules/app-builder-lib/out/targets/snap.js
    #echo "$SNAP_TOKEN" | snapcraft login --with -;
  fi
- (cd electron && npm version $(node -p -e "require('../package.json').version"))

script:
- node ./cli/i18n.js --json
- node ./cli/build.js electron --env=prod --release --platform=${DISTRIBUTION}
