image: Visual Studio 2019

platform:
  - x64

skip_tags: true

branches:
  only:
    - master
    - develop
    - desktop

init:
  - git config --global core.autocrlf input

environment:
  matrix:
    - DISTRIBUTION: win
    - DISTRIBUTION: appx
    - DISTRIBUTION: appx-dev

install:
  - ps: Install-Product node 12 x64
  - set NODE_ENV=ci
  - npm config set @coinspace:registry https://npm.pkg.github.com
  - npm config set "//npm.pkg.github.com/:_authToken" ${NPM_READ_TOKEN}
  - npm ci
  - cd electron
  - npm ci
  - set NODE_ENV=production
  - cd ..

before_build:
  - ps: >-
      if ($Env:APPVEYOR_REPO_BRANCH -eq "master") {
        $Env:SITE_URL="https://coin.space/"
      }
  - ps: >-
      if (Test-Path Env:\CERTIFICATE_WIN) {
        $workingDirectory = Convert-Path (Resolve-Path -path ".")
        $filename = "$workingDirectory\electron\resources\certificate.pfx"
        $bytes = [Convert]::FromBase64String($env:CERTIFICATE_WIN)
        [IO.File]::WriteAllBytes($filename, $bytes)
      }
  - ps: >-
      if (Test-Path Env:\GOOGLE_CLOUD_KEY_FILE) {
        $workingDirectory = Convert-Path (Resolve-Path -path ".")
        $filename = "$workingDirectory\gcloud.key.json"
        $bytes = [Convert]::FromBase64String($env:GOOGLE_CLOUD_KEY_FILE)
        [IO.File]::WriteAllBytes($filename, $bytes)
        $Env:GOOGLE_APPLICATION_CREDENTIALS="$filename"
      }
  - ps: $Env:VERSION=$(node -p -e "require('./package.json').version")
  - ps: cd electron
  # patch https://github.com/felixrieseberg/electron-windows-store/blob/master/template/appxmanifest.xml
  - ps: Copy-Item "resources/appxmanifest.xml" -Destination "node_modules/electron-windows-store/template/appxmanifest.xml"
  # patch https://github.com/felixrieseberg/electron-windows-store/blob/master/lib/sign.js
  - ps: >-
      if ($Env:DISTRIBUTION -eq "appx") {
        $sign="node_modules/electron-windows-store/lib/sign.js"
        (Get-Content $sign -Raw).replace("function signAppx (program) {`n", "function signAppx (program) { return;`n") | Set-Content $sign
        (Get-Content $sign -Raw).replace("function makeCert (parametersOrPublisherName, certFilePath, program) {`n", "function makeCert (parametersOrPublisherName, certFilePath, program) { return;`n") | Set-Content $sign
      }
  - ps: npm version $Env:VERSION
  - ps: cd ..

build_script:
  - ps: |
      if ($true)
      {
        node ./cli/i18n.js --json
        node ./cli/build.js electron --env=prod --release --platform=$Env:DISTRIBUTION
        Write-Host "Success"
      }

test: off
